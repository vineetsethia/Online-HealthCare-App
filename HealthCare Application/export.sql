--------------------------------------------------------
--  File created - Friday-September-15-2017   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence ADDRESS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HEALTH"."ADDRESS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ADMIN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HEALTH"."ADMIN_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence APPOINTMENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HEALTH"."APPOINTMENT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 141 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCTOR_RATING_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HEALTH"."DOCTOR_RATING_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCTOR_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HEALTH"."DOCTOR_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MEDICAL_CONSUMPTION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HEALTH"."MEDICAL_CONSUMPTION_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PATIENT_RATING_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HEALTH"."PATIENT_RATING_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PATIENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HEALTH"."PATIENT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PS_TXN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HEALTH"."PS_TXN_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 50 START WITH 17001 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table ADDRESS
--------------------------------------------------------

  CREATE TABLE "HEALTH"."ADDRESS" 
   (	"ADDRESS_ID" NUMBER, 
	"STREET" VARCHAR2(50 BYTE), 
	"AREA" VARCHAR2(50 BYTE), 
	"CITY" VARCHAR2(50 BYTE), 
	"STATE_PROVINCE" VARCHAR2(50 BYTE), 
	"COUNTRY" VARCHAR2(50 BYTE), 
	"PIN" VARCHAR2(7 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ADMIN
--------------------------------------------------------

  CREATE TABLE "HEALTH"."ADMIN" 
   (	"ADMIN_ID" NUMBER, 
	"FIRST_NAME" VARCHAR2(50 BYTE), 
	"LAST_NAME" VARCHAR2(50 BYTE), 
	"CONTACT_NUMBER" VARCHAR2(50 BYTE), 
	"EMAIL" VARCHAR2(50 BYTE), 
	"ADDRESS_ID" NUMBER, 
	"PASSWORD" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table APPOINTMENT
--------------------------------------------------------

  CREATE TABLE "HEALTH"."APPOINTMENT" 
   (	"APPOINTMENT_ID" NUMBER, 
	"DOCTOR_ID" NUMBER, 
	"PATIENT_ID" NUMBER, 
	"REGISTRATION_TIMESTAMP" TIMESTAMP (6) DEFAULT SYSTIMESTAMP, 
	"APPOINTMENT_DATE" DATE, 
	"TIME_HOUR" NUMBER, 
	"TIME_MIN" NUMBER, 
	"TIME_MERIDIAN" VARCHAR2(20 BYTE) DEFAULT 'PM', 
	"APPOINTMENT_STATUS" VARCHAR2(30 BYTE) DEFAULT 'SCHEDULED'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table DOCTOR
--------------------------------------------------------

  CREATE TABLE "HEALTH"."DOCTOR" 
   (	"DOCTOR_ID" NUMBER, 
	"FIRST_NAME" VARCHAR2(50 BYTE), 
	"LAST_NAME" VARCHAR2(50 BYTE), 
	"CONTACT_NUMBER" VARCHAR2(50 BYTE), 
	"EMAIL" VARCHAR2(50 BYTE), 
	"ADDRESS_ID" NUMBER, 
	"SPECIALIZATION" VARCHAR2(50 BYTE), 
	"CONSULTATION_FEE" NUMBER DEFAULT 0, 
	"AVERAGE_RATING" NUMBER DEFAULT 0, 
	"RATING_COUNT" NUMBER DEFAULT 0, 
	"PASSWORD" VARCHAR2(50 BYTE), 
	"BALANCE" NUMBER DEFAULT 0, 
	"TIME_HOUR_START" NUMBER DEFAULT 09, 
	"TIME_MIN_START" NUMBER DEFAULT 00, 
	"TIME_MERIDIAN_START" VARCHAR2(20 BYTE) DEFAULT 'AM', 
	"TIME_HOUR_END" NUMBER DEFAULT 07, 
	"TIME_MIN_END" NUMBER DEFAULT 00, 
	"TIME_MERIDIAN_END" VARCHAR2(20 BYTE) DEFAULT 'PM'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table DOCTOR_RATING
--------------------------------------------------------

  CREATE TABLE "HEALTH"."DOCTOR_RATING" 
   (	"DOCTOR_RATING_ID" NUMBER, 
	"APPOINTMENT_ID" NUMBER, 
	"RATING_SCORE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table MEDICAL_CONSUMPTION
--------------------------------------------------------

  CREATE TABLE "HEALTH"."MEDICAL_CONSUMPTION" 
   (	"MEDICAL_CONSUMPTION_ID" NUMBER, 
	"APPOINTMENT_ID" NUMBER, 
	"CATEGORY" VARCHAR2(50 BYTE), 
	"NAME" VARCHAR2(50 BYTE), 
	"COURSE_DURATION" VARCHAR2(50 BYTE) DEFAULT 'NOT APPLICABLE', 
	"DOSAGE_PER_DAY" VARCHAR2(50 BYTE) DEFAULT 'NOT APPLICABLE', 
	"DESCRIPTION" VARCHAR2(50 BYTE) DEFAULT 'NOT APPLICABLE'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PATIENT
--------------------------------------------------------

  CREATE TABLE "HEALTH"."PATIENT" 
   (	"PATIENT_ID" NUMBER, 
	"FIRST_NAME" VARCHAR2(50 BYTE), 
	"LAST_NAME" VARCHAR2(50 BYTE), 
	"CONTACT_NUMBER" VARCHAR2(50 BYTE), 
	"EMAIL" VARCHAR2(50 BYTE), 
	"ADDRESS_ID" NUMBER, 
	"AVERAGE_RATING" NUMBER DEFAULT 0, 
	"RATING_COUNT" NUMBER DEFAULT 0, 
	"PASSWORD" VARCHAR2(50 BYTE), 
	"BALANCE" NUMBER DEFAULT 0, 
	"LAST_ADDED_BALANCE" NUMBER DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PATIENT_RATING
--------------------------------------------------------

  CREATE TABLE "HEALTH"."PATIENT_RATING" 
   (	"PATIENT_RATING_ID" NUMBER, 
	"APPOINTMENT_ID" NUMBER, 
	"RATING_SCORE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PS_TXN
--------------------------------------------------------

  CREATE TABLE "HEALTH"."PS_TXN" 
   (	"ID" NUMBER(20,0), 
	"PARENTID" NUMBER(20,0), 
	"COLLID" NUMBER(10,0), 
	"CONTENT" BLOB, 
	"CREATION_DATE" DATE DEFAULT sysdate
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" 
 LOB ("CONTENT") STORE AS BASICFILE (
  TABLESPACE "SYSTEM" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  CACHE 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
REM INSERTING into HEALTH.ADDRESS
SET DEFINE OFF;
Insert into HEALTH.ADDRESS (ADDRESS_ID,STREET,AREA,CITY,STATE_PROVINCE,COUNTRY,PIN) values (1,'11 CROSS ROAD','BLOCK 12, JAWAHAR NAGAR','JAIPUR','RAJASTHAN','INDIA','332001');
Insert into HEALTH.ADDRESS (ADDRESS_ID,STREET,AREA,CITY,STATE_PROVINCE,COUNTRY,PIN) values (2,'12 CROSS ROAD','BLOCK 4, VIDHYA NAGAR','SURAT','GUJARAT','INDIA','334021');
Insert into HEALTH.ADDRESS (ADDRESS_ID,STREET,AREA,CITY,STATE_PROVINCE,COUNTRY,PIN) values (3,'13 CROSS ROAD','BLOCK 20, PRAHLAD NAGAR','AHMEDABAD','GUJARAT','INDIA','344001');
Insert into HEALTH.ADDRESS (ADDRESS_ID,STREET,AREA,CITY,STATE_PROVINCE,COUNTRY,PIN) values (4,'STREET 7','CHANDANI CHOWK','NEW DELHI','DELHI','INDIA','372801');
Insert into HEALTH.ADDRESS (ADDRESS_ID,STREET,AREA,CITY,STATE_PROVINCE,COUNTRY,PIN) values (5,'STREET 8','BLOCK 4, ICCHANATH','SURAT','GUJARAT','INDIA','334021');
Insert into HEALTH.ADDRESS (ADDRESS_ID,STREET,AREA,CITY,STATE_PROVINCE,COUNTRY,PIN) values (6,'STREET 2','CHOWK BAZZAR','AHMEDABAD','GUJARAT','INDIA','344001');
Insert into HEALTH.ADDRESS (ADDRESS_ID,STREET,AREA,CITY,STATE_PROVINCE,COUNTRY,PIN) values (21,'STREET 2','LALBAGH','JODHPUR','RAJASTHAN','INDIA','334009');
Insert into HEALTH.ADDRESS (ADDRESS_ID,STREET,AREA,CITY,STATE_PROVINCE,COUNTRY,PIN) values (22,'STREET 8','NAVODAY NAGAR','BIKANER','RAJASTHAN','INDIA','444001');
Insert into HEALTH.ADDRESS (ADDRESS_ID,STREET,AREA,CITY,STATE_PROVINCE,COUNTRY,PIN) values (23,'LANE 21','GHOSI','GAYA','BIHAR','INDIA','445001');
Insert into HEALTH.ADDRESS (ADDRESS_ID,STREET,AREA,CITY,STATE_PROVINCE,COUNTRY,PIN) values (24,'STREET 7','VASANT KUNJ','NEW DELHI','DELHI','INDIA','456789');
Insert into HEALTH.ADDRESS (ADDRESS_ID,STREET,AREA,CITY,STATE_PROVINCE,COUNTRY,PIN) values (41,'13 CROSS STREET','LALBAGH','BANGALORE','KARNATKA','INDIA','564768');
Insert into HEALTH.ADDRESS (ADDRESS_ID,STREET,AREA,CITY,STATE_PROVINCE,COUNTRY,PIN) values (42,'GANDHI ROAD','PATEL NAGAR','JAIPUR','RAJASTHAN','INDIA','777892');
Insert into HEALTH.ADDRESS (ADDRESS_ID,STREET,AREA,CITY,STATE_PROVINCE,COUNTRY,PIN) values (47,'GH ROAD','INFO CITY','GANDHINAGAR','GUJARAT','INDIA','382006');
Insert into HEALTH.ADDRESS (ADDRESS_ID,STREET,AREA,CITY,STATE_PROVINCE,COUNTRY,PIN) values (45,'a','a','a','a','a','a');
Insert into HEALTH.ADDRESS (ADDRESS_ID,STREET,AREA,CITY,STATE_PROVINCE,COUNTRY,PIN) values (46,'BHAU GALI','CHOWK BAZAAR','SURAT','GUJARAT','INDIA','678345');
REM INSERTING into HEALTH.ADMIN
SET DEFINE OFF;
Insert into HEALTH.ADMIN (ADMIN_ID,FIRST_NAME,LAST_NAME,CONTACT_NUMBER,EMAIL,ADDRESS_ID,PASSWORD) values (1,'RAM','KUMAR','9087654321','RAMKUMAR@GMAIL.COM',1,'ced169380df0bd9e3640e59bb7c85dba');
REM INSERTING into HEALTH.APPOINTMENT
SET DEFINE OFF;
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (24,1,1,to_timestamp('05-SEP-17 02.41.47.703000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('06-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),6,30,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (25,1,1,to_timestamp('05-SEP-17 02.42.36.007000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('10-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),3,15,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (26,1,2,to_timestamp('05-SEP-17 02.43.16.504000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('10-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),4,15,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (27,2,2,to_timestamp('05-SEP-17 02.44.01.487000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('15-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),4,15,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (38,1,2,to_timestamp('05-SEP-17 06.05.45.172000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('12-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),4,15,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (39,1,1,to_timestamp('05-SEP-17 06.17.28.309000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('13-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),4,15,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (41,1,1,to_timestamp('06-SEP-17 06.35.10.249000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('19-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),6,30,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (42,1,1,to_timestamp('06-SEP-17 08.21.22.338000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('28-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),6,45,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (61,1,1,to_timestamp('08-SEP-17 03.52.25.996000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('09-DEC-17','DD-MON-RR HH.MI.SSXFF AM'),4,15,'PM','CANCELED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (81,1,1,to_timestamp('11-SEP-17 12.46.15.505000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('15-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),1,30,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (82,1,1,to_timestamp('11-SEP-17 02.36.12.440000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('09-DEC-89','DD-MON-RR HH.MI.SSXFF AM'),3,45,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (83,1,1,to_timestamp('11-SEP-17 02.38.18.175000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('10-NOV-17','DD-MON-RR HH.MI.SSXFF AM'),3,45,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (84,1,1,to_timestamp('11-SEP-17 02.44.15.150000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('11-NOV-17','DD-MON-RR HH.MI.SSXFF AM'),3,45,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (101,21,1,to_timestamp('12-SEP-17 04.22.44.935000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('14-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),3,15,'PM','CANCELED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (102,2,1,to_timestamp('12-SEP-17 04.28.55.501000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('14-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),3,15,'PM','CANCELED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (121,21,1,to_timestamp('14-SEP-17 11.17.21.023000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('19-OCT-17','DD-MON-RR HH.MI.SSXFF AM'),4,15,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (122,21,1,to_timestamp('14-SEP-17 12.13.35.716000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('17-OCT-17','DD-MON-RR HH.MI.SSXFF AM'),4,45,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (123,41,1,to_timestamp('14-SEP-17 02.51.26.042000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('15-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),5,30,'PM','CANCELED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (124,41,1,to_timestamp('14-SEP-17 02.51.52.678000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('15-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),2,30,'PM','CANCELED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (125,1,1,to_timestamp('14-SEP-17 03.00.53.991000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('15-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),2,30,'PM','CANCELED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (126,1,1,to_timestamp('14-SEP-17 03.06.21.261000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('14-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),3,30,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (127,1,1,to_timestamp('14-SEP-17 03.07.00.268000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('14-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),2,30,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (128,1,1,to_timestamp('14-SEP-17 04.23.15.103000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('19-SEP-17','DD-MON-RR HH.MI.SSXFF AM'),5,30,'PM','SCHEDULED');
Insert into HEALTH.APPOINTMENT (APPOINTMENT_ID,DOCTOR_ID,PATIENT_ID,REGISTRATION_TIMESTAMP,APPOINTMENT_DATE,TIME_HOUR,TIME_MIN,TIME_MERIDIAN,APPOINTMENT_STATUS) values (129,1,1,to_timestamp('14-SEP-17 06.08.41.625000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('18-OCT-17','DD-MON-RR HH.MI.SSXFF AM'),5,30,'PM','CANCELED');
REM INSERTING into HEALTH.DOCTOR
SET DEFINE OFF;
Insert into HEALTH.DOCTOR (DOCTOR_ID,FIRST_NAME,LAST_NAME,CONTACT_NUMBER,EMAIL,ADDRESS_ID,SPECIALIZATION,CONSULTATION_FEE,AVERAGE_RATING,RATING_COUNT,PASSWORD,BALANCE,TIME_HOUR_START,TIME_MIN_START,TIME_MERIDIAN_START,TIME_HOUR_END,TIME_MIN_END,TIME_MERIDIAN_END) values (1,'VINOD','VAGHELA','9087654322','VINODVAGHELA@GMAIL.COM',3,'HEART',100,4,4,'ced169380df0bd9e3640e59bb7c85dba',1400,9,30,'AM',8,30,'PM');
Insert into HEALTH.DOCTOR (DOCTOR_ID,FIRST_NAME,LAST_NAME,CONTACT_NUMBER,EMAIL,ADDRESS_ID,SPECIALIZATION,CONSULTATION_FEE,AVERAGE_RATING,RATING_COUNT,PASSWORD,BALANCE,TIME_HOUR_START,TIME_MIN_START,TIME_MERIDIAN_START,TIME_HOUR_END,TIME_MIN_END,TIME_MERIDIAN_END) values (2,'TARAK','MEHTA','9083534321','TARAKMEHTA@GMAIL.COM',4,'LIVER',50,0,0,'9a729e3a99814609c02a19214d54fb44',0,9,30,'AM',8,30,'PM');
Insert into HEALTH.DOCTOR (DOCTOR_ID,FIRST_NAME,LAST_NAME,CONTACT_NUMBER,EMAIL,ADDRESS_ID,SPECIALIZATION,CONSULTATION_FEE,AVERAGE_RATING,RATING_COUNT,PASSWORD,BALANCE,TIME_HOUR_START,TIME_MIN_START,TIME_MERIDIAN_START,TIME_HOUR_END,TIME_MIN_END,TIME_MERIDIAN_END) values (21,'RAKESH','SONI','8901234567','RAKESHSONI@GMAIL.COM',24,'EYE',50,0,0,'7b0c35c6bd6e06766c90beefba7e4b83',100,7,30,'AM',9,30,'PM');
Insert into HEALTH.DOCTOR (DOCTOR_ID,FIRST_NAME,LAST_NAME,CONTACT_NUMBER,EMAIL,ADDRESS_ID,SPECIALIZATION,CONSULTATION_FEE,AVERAGE_RATING,RATING_COUNT,PASSWORD,BALANCE,TIME_HOUR_START,TIME_MIN_START,TIME_MERIDIAN_START,TIME_HOUR_END,TIME_MIN_END,TIME_MERIDIAN_END) values (41,'AAKASH','RANA','9801234567','AAKASHRANA@GMAIL.COM',41,'HEART',50,0,0,'ced169380df0bd9e3640e59bb7c85dba',0,7,30,'AM',10,30,'PM');
Insert into HEALTH.DOCTOR (DOCTOR_ID,FIRST_NAME,LAST_NAME,CONTACT_NUMBER,EMAIL,ADDRESS_ID,SPECIALIZATION,CONSULTATION_FEE,AVERAGE_RATING,RATING_COUNT,PASSWORD,BALANCE,TIME_HOUR_START,TIME_MIN_START,TIME_MERIDIAN_START,TIME_HOUR_END,TIME_MIN_END,TIME_MERIDIAN_END) values (43,'HARSHIT','PATEL','9012345678','HARSHITPATEL@GMAIL.COM',47,'EAR',50,0,0,'ced169380df0bd9e3640e59bb7c85dba',0,7,30,'AM',9,30,'PM');
REM INSERTING into HEALTH.DOCTOR_RATING
SET DEFINE OFF;
Insert into HEALTH.DOCTOR_RATING (DOCTOR_RATING_ID,APPOINTMENT_ID,RATING_SCORE) values (3,25,4);
Insert into HEALTH.DOCTOR_RATING (DOCTOR_RATING_ID,APPOINTMENT_ID,RATING_SCORE) values (21,82,3);
Insert into HEALTH.DOCTOR_RATING (DOCTOR_RATING_ID,APPOINTMENT_ID,RATING_SCORE) values (41,24,5);
Insert into HEALTH.DOCTOR_RATING (DOCTOR_RATING_ID,APPOINTMENT_ID,RATING_SCORE) values (43,39,4);
REM INSERTING into HEALTH.MEDICAL_CONSUMPTION
SET DEFINE OFF;
Insert into HEALTH.MEDICAL_CONSUMPTION (MEDICAL_CONSUMPTION_ID,APPOINTMENT_ID,CATEGORY,NAME,COURSE_DURATION,DOSAGE_PER_DAY,DESCRIPTION) values (1,26,'MEDICINE','PARACITAMOL','2 WEEKS','2','NOT APPLICABLE');
Insert into HEALTH.MEDICAL_CONSUMPTION (MEDICAL_CONSUMPTION_ID,APPOINTMENT_ID,CATEGORY,NAME,COURSE_DURATION,DOSAGE_PER_DAY,DESCRIPTION) values (2,25,'TEST','X-RAY','NOT APPLICABLE','NOT APPLICABLE','LIVER - INFECTION');
Insert into HEALTH.MEDICAL_CONSUMPTION (MEDICAL_CONSUMPTION_ID,APPOINTMENT_ID,CATEGORY,NAME,COURSE_DURATION,DOSAGE_PER_DAY,DESCRIPTION) values (21,82,'TEST','X-RAY','NOT APPLICABLE','NOT APPLICABLE','LUNG INFECTION');
Insert into HEALTH.MEDICAL_CONSUMPTION (MEDICAL_CONSUMPTION_ID,APPOINTMENT_ID,CATEGORY,NAME,COURSE_DURATION,DOSAGE_PER_DAY,DESCRIPTION) values (41,38,'MEDICINE','DISPRIN','1 WEEK','2','HEADCHE');
Insert into HEALTH.MEDICAL_CONSUMPTION (MEDICAL_CONSUMPTION_ID,APPOINTMENT_ID,CATEGORY,NAME,COURSE_DURATION,DOSAGE_PER_DAY,DESCRIPTION) values (42,24,'MEDICINE','PARACITAMOL','2 WEEKS','1','NOT APPLICABLE');
REM INSERTING into HEALTH.PATIENT
SET DEFINE OFF;
Insert into HEALTH.PATIENT (PATIENT_ID,FIRST_NAME,LAST_NAME,CONTACT_NUMBER,EMAIL,ADDRESS_ID,AVERAGE_RATING,RATING_COUNT,PASSWORD,BALANCE,LAST_ADDED_BALANCE) values (1,'RAJU','JHA','9083534894','RAJUJHA@GMAIL.COM',3,4,3,'ced169380df0bd9e3640e59bb7c85dba',3150,0);
Insert into HEALTH.PATIENT (PATIENT_ID,FIRST_NAME,LAST_NAME,CONTACT_NUMBER,EMAIL,ADDRESS_ID,AVERAGE_RATING,RATING_COUNT,PASSWORD,BALANCE,LAST_ADDED_BALANCE) values (2,'MANAV','TYAGI','9088934891','MANUTYAGI@OUTLOOK.COM',4,4,1,'9a729e3a99814609c02a19214d54fb44',2000,0);
Insert into HEALTH.PATIENT (PATIENT_ID,FIRST_NAME,LAST_NAME,CONTACT_NUMBER,EMAIL,ADDRESS_ID,AVERAGE_RATING,RATING_COUNT,PASSWORD,BALANCE,LAST_ADDED_BALANCE) values (21,'HIMANSHU','RAMANI','9012345678','HIMANSHURAMANI@GMAIL.COM',23,0,0,'7b0c35c6bd6e06766c90beefba7e4b83',5000,0);
Insert into HEALTH.PATIENT (PATIENT_ID,FIRST_NAME,LAST_NAME,CONTACT_NUMBER,EMAIL,ADDRESS_ID,AVERAGE_RATING,RATING_COUNT,PASSWORD,BALANCE,LAST_ADDED_BALANCE) values (41,'SARTHAK','KUMAR','7890123456','SARTHAKKUMAR@GMAIL.COM',42,0,0,'ced169380df0bd9e3640e59bb7c85dba',0,0);
Insert into HEALTH.PATIENT (PATIENT_ID,FIRST_NAME,LAST_NAME,CONTACT_NUMBER,EMAIL,ADDRESS_ID,AVERAGE_RATING,RATING_COUNT,PASSWORD,BALANCE,LAST_ADDED_BALANCE) values (43,'BHUMIKA','KALAVADIA','9870654321','BHUMIKAKALAVADIA@GMAIL.COM',46,0,0,'ced169380df0bd9e3640e59bb7c85dba',0,0);
REM INSERTING into HEALTH.PATIENT_RATING
SET DEFINE OFF;
Insert into HEALTH.PATIENT_RATING (PATIENT_RATING_ID,APPOINTMENT_ID,RATING_SCORE) values (3,25,5);
Insert into HEALTH.PATIENT_RATING (PATIENT_RATING_ID,APPOINTMENT_ID,RATING_SCORE) values (21,82,3);
Insert into HEALTH.PATIENT_RATING (PATIENT_RATING_ID,APPOINTMENT_ID,RATING_SCORE) values (41,127,4);
Insert into HEALTH.PATIENT_RATING (PATIENT_RATING_ID,APPOINTMENT_ID,RATING_SCORE) values (42,38,4);
REM INSERTING into HEALTH.PS_TXN
SET DEFINE OFF;
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,1,to_timestamp('02-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,2,to_timestamp('02-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,1153,to_timestamp('02-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,1151,to_timestamp('02-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,1152,to_timestamp('02-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,2301,to_timestamp('04-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,3351,to_timestamp('04-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,3352,to_timestamp('05-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,4603,to_timestamp('06-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,4901,to_timestamp('07-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,4604,to_timestamp('06-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,4902,to_timestamp('07-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,4903,to_timestamp('07-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,4904,to_timestamp('07-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,4905,to_timestamp('07-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,4906,to_timestamp('07-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,5001,to_timestamp('07-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,6151,to_timestamp('07-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,6152,to_timestamp('07-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,6251,to_timestamp('07-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,7501,to_timestamp('08-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,7701,to_timestamp('08-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,7601,to_timestamp('08-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,7801,to_timestamp('08-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,7802,to_timestamp('08-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,7901,to_timestamp('08-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,8001,to_timestamp('08-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,8101,to_timestamp('08-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,9151,to_timestamp('09-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,9251,to_timestamp('09-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,10301,to_timestamp('09-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,11351,to_timestamp('09-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14153,to_timestamp('10-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,11551,to_timestamp('09-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,11651,to_timestamp('09-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,13851,to_timestamp('10-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,13951,to_timestamp('10-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14151,to_timestamp('10-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14152,to_timestamp('10-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14154,to_timestamp('10-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14155,to_timestamp('10-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14156,to_timestamp('10-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14157,to_timestamp('10-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14158,to_timestamp('10-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14159,to_timestamp('10-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14160,to_timestamp('10-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14551,to_timestamp('11-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14351,to_timestamp('11-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14451,to_timestamp('11-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14651,to_timestamp('11-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14751,to_timestamp('11-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14851,to_timestamp('11-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
Insert into HEALTH.PS_TXN (ID,PARENTID,COLLID,CREATION_DATE) values (1,-1,14951,to_timestamp('12-SEP-17','DD-MON-RR HH.MI.SSXFF AM'));
--------------------------------------------------------
--  DDL for Index PS_TXN_IDX
--------------------------------------------------------

  CREATE INDEX "HEALTH"."PS_TXN_IDX" ON "HEALTH"."PS_TXN" ("COLLID", "ID") REVERSE 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index APPOINTMENT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HEALTH"."APPOINTMENT_PK" ON "HEALTH"."APPOINTMENT" ("APPOINTMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index MEDICAL_CONSUMPTION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HEALTH"."MEDICAL_CONSUMPTION_PK" ON "HEALTH"."MEDICAL_CONSUMPTION" ("MEDICAL_CONSUMPTION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index DOCTOR_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HEALTH"."DOCTOR_PK" ON "HEALTH"."DOCTOR" ("DOCTOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PATIENT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HEALTH"."PATIENT_PK" ON "HEALTH"."PATIENT" ("PATIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ADMIN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HEALTH"."ADMIN_PK" ON "HEALTH"."ADMIN" ("ADMIN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PATIENT_RATING_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HEALTH"."PATIENT_RATING_PK" ON "HEALTH"."PATIENT_RATING" ("PATIENT_RATING_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ADDRESS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HEALTH"."ADDRESS_PK" ON "HEALTH"."ADDRESS" ("ADDRESS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index DOCTOR_RATING_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HEALTH"."DOCTOR_RATING_PK" ON "HEALTH"."DOCTOR_RATING" ("DOCTOR_RATING_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  Constraints for Table DOCTOR_RATING
--------------------------------------------------------

  ALTER TABLE "HEALTH"."DOCTOR_RATING" ADD CONSTRAINT "DOCTOR_RATING_PK" PRIMARY KEY ("DOCTOR_RATING_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "HEALTH"."DOCTOR_RATING" MODIFY ("RATING_SCORE" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR_RATING" MODIFY ("APPOINTMENT_ID" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR_RATING" MODIFY ("DOCTOR_RATING_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ADDRESS
--------------------------------------------------------

  ALTER TABLE "HEALTH"."ADDRESS" ADD CONSTRAINT "ADDRESS_PK" PRIMARY KEY ("ADDRESS_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "HEALTH"."ADDRESS" MODIFY ("ADDRESS_ID" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."ADDRESS" MODIFY ("PIN" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."ADDRESS" MODIFY ("COUNTRY" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."ADDRESS" MODIFY ("STATE_PROVINCE" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."ADDRESS" MODIFY ("CITY" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."ADDRESS" MODIFY ("AREA" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."ADDRESS" MODIFY ("STREET" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ADMIN
--------------------------------------------------------

  ALTER TABLE "HEALTH"."ADMIN" MODIFY ("PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."ADMIN" ADD CONSTRAINT "ADMIN_PK" PRIMARY KEY ("ADMIN_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "HEALTH"."ADMIN" MODIFY ("ADDRESS_ID" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."ADMIN" MODIFY ("EMAIL" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."ADMIN" MODIFY ("CONTACT_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."ADMIN" MODIFY ("LAST_NAME" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."ADMIN" MODIFY ("FIRST_NAME" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."ADMIN" MODIFY ("ADMIN_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MEDICAL_CONSUMPTION
--------------------------------------------------------

  ALTER TABLE "HEALTH"."MEDICAL_CONSUMPTION" MODIFY ("DESCRIPTION" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."MEDICAL_CONSUMPTION" MODIFY ("DOSAGE_PER_DAY" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."MEDICAL_CONSUMPTION" MODIFY ("COURSE_DURATION" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."MEDICAL_CONSUMPTION" ADD CONSTRAINT "MEDICAL_CONSUMPTION_PK" PRIMARY KEY ("MEDICAL_CONSUMPTION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "HEALTH"."MEDICAL_CONSUMPTION" MODIFY ("MEDICAL_CONSUMPTION_ID" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."MEDICAL_CONSUMPTION" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."MEDICAL_CONSUMPTION" MODIFY ("CATEGORY" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."MEDICAL_CONSUMPTION" MODIFY ("APPOINTMENT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCTOR
--------------------------------------------------------

  ALTER TABLE "HEALTH"."DOCTOR" ADD CONSTRAINT "DOCTOR_CHK1" CHECK (Balance >=0) ENABLE;
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("BALANCE" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("TIME_MERIDIAN_END" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("TIME_MIN_END" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("TIME_HOUR_END" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("TIME_MERIDIAN_START" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("TIME_MIN_START" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("TIME_HOUR_START" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" ADD CONSTRAINT "DOCTOR_PK" PRIMARY KEY ("DOCTOR_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("RATING_COUNT" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("AVERAGE_RATING" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("CONSULTATION_FEE" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("SPECIALIZATION" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("ADDRESS_ID" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("EMAIL" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("CONTACT_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("LAST_NAME" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("FIRST_NAME" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."DOCTOR" MODIFY ("DOCTOR_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PATIENT
--------------------------------------------------------

  ALTER TABLE "HEALTH"."PATIENT" ADD CONSTRAINT "PATIENT_CHK1" CHECK (Balance >= 0) ENABLE;
  ALTER TABLE "HEALTH"."PATIENT" MODIFY ("BALANCE" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."PATIENT" MODIFY ("PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."PATIENT" MODIFY ("LAST_ADDED_BALANCE" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."PATIENT" ADD CONSTRAINT "PATIENT_PK" PRIMARY KEY ("PATIENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "HEALTH"."PATIENT" MODIFY ("PATIENT_ID" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."PATIENT" MODIFY ("RATING_COUNT" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."PATIENT" MODIFY ("AVERAGE_RATING" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."PATIENT" MODIFY ("ADDRESS_ID" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."PATIENT" MODIFY ("EMAIL" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."PATIENT" MODIFY ("CONTACT_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."PATIENT" MODIFY ("LAST_NAME" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."PATIENT" MODIFY ("FIRST_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PATIENT_RATING
--------------------------------------------------------

  ALTER TABLE "HEALTH"."PATIENT_RATING" ADD CONSTRAINT "PATIENT_RATING_PK" PRIMARY KEY ("PATIENT_RATING_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "HEALTH"."PATIENT_RATING" MODIFY ("RATING_SCORE" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."PATIENT_RATING" MODIFY ("APPOINTMENT_ID" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."PATIENT_RATING" MODIFY ("PATIENT_RATING_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PS_TXN
--------------------------------------------------------

  ALTER TABLE "HEALTH"."PS_TXN" ADD CONSTRAINT "PS_TXN_PK" PRIMARY KEY ("COLLID", "ID")
  USING INDEX REVERSE PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table APPOINTMENT
--------------------------------------------------------

  ALTER TABLE "HEALTH"."APPOINTMENT" ADD CONSTRAINT "APPOINTMENT_PK" PRIMARY KEY ("APPOINTMENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "HEALTH"."APPOINTMENT" MODIFY ("APPOINTMENT_STATUS" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."APPOINTMENT" MODIFY ("TIME_MERIDIAN" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."APPOINTMENT" MODIFY ("TIME_MIN" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."APPOINTMENT" MODIFY ("TIME_HOUR" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."APPOINTMENT" MODIFY ("APPOINTMENT_DATE" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."APPOINTMENT" MODIFY ("REGISTRATION_TIMESTAMP" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."APPOINTMENT" MODIFY ("PATIENT_ID" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."APPOINTMENT" MODIFY ("DOCTOR_ID" NOT NULL ENABLE);
  ALTER TABLE "HEALTH"."APPOINTMENT" MODIFY ("APPOINTMENT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table ADMIN
--------------------------------------------------------

  ALTER TABLE "HEALTH"."ADMIN" ADD CONSTRAINT "ADMIN_FK1" FOREIGN KEY ("ADDRESS_ID")
	  REFERENCES "HEALTH"."ADDRESS" ("ADDRESS_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APPOINTMENT
--------------------------------------------------------

  ALTER TABLE "HEALTH"."APPOINTMENT" ADD CONSTRAINT "APPOINTMENT_FK1" FOREIGN KEY ("DOCTOR_ID")
	  REFERENCES "HEALTH"."DOCTOR" ("DOCTOR_ID") ENABLE;
  ALTER TABLE "HEALTH"."APPOINTMENT" ADD CONSTRAINT "APPOINTMENT_FK2" FOREIGN KEY ("PATIENT_ID")
	  REFERENCES "HEALTH"."PATIENT" ("PATIENT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCTOR
--------------------------------------------------------

  ALTER TABLE "HEALTH"."DOCTOR" ADD CONSTRAINT "DOCTOR_FK1" FOREIGN KEY ("ADDRESS_ID")
	  REFERENCES "HEALTH"."ADDRESS" ("ADDRESS_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCTOR_RATING
--------------------------------------------------------

  ALTER TABLE "HEALTH"."DOCTOR_RATING" ADD CONSTRAINT "DOCTOR_RATING_FK1" FOREIGN KEY ("APPOINTMENT_ID")
	  REFERENCES "HEALTH"."APPOINTMENT" ("APPOINTMENT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MEDICAL_CONSUMPTION
--------------------------------------------------------

  ALTER TABLE "HEALTH"."MEDICAL_CONSUMPTION" ADD CONSTRAINT "MEDICAL_CONSUMPTION_FK1" FOREIGN KEY ("APPOINTMENT_ID")
	  REFERENCES "HEALTH"."APPOINTMENT" ("APPOINTMENT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PATIENT
--------------------------------------------------------

  ALTER TABLE "HEALTH"."PATIENT" ADD CONSTRAINT "PATIENT_FK1" FOREIGN KEY ("ADDRESS_ID")
	  REFERENCES "HEALTH"."ADDRESS" ("ADDRESS_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PATIENT_RATING
--------------------------------------------------------

  ALTER TABLE "HEALTH"."PATIENT_RATING" ADD CONSTRAINT "PATIENT_RATING_FK1" FOREIGN KEY ("APPOINTMENT_ID")
	  REFERENCES "HEALTH"."APPOINTMENT" ("APPOINTMENT_ID") ENABLE;
--------------------------------------------------------
--  DDL for Trigger ADD_BALANCE_PATIENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HEALTH"."ADD_BALANCE_PATIENT" 
BEFORE UPDATE OF LAST_ADDED_BALANCE ON PATIENT 
FOR EACH ROW 
DECLARE
BEGIN
  IF :NEW.LAST_ADDED_BALANCE IS NOT NULL AND :NEW.LAST_ADDED_BALANCE > 0 THEN
  :NEW.BALANCE := :OLD.BALANCE + :NEW.LAST_ADDED_BALANCE;
  :NEW.LAST_ADDED_BALANCE := 0;
  END IF;
END;
/
ALTER TRIGGER "HEALTH"."ADD_BALANCE_PATIENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ALREADY_EXISTS_APPOINTMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HEALTH"."ALREADY_EXISTS_APPOINTMENT" 
BEFORE INSERT ON APPOINTMENT 
FOR EACH ROW
DECLARE
V_TIME_HOUR_START INTEGER;
V_TIME_MIN_START INTEGER;
V_TIME_MERIDIAN_START VARCHAR2(50);
V_TIME_HOUR_END INTEGER;
V_TIME_MIN_END INTEGER;
V_TIME_MERIDIAN_END VARCHAR2(50);
V_APPOINTMENT_ID INTEGER;
V_FLAG INTEGER; 
BEGIN
 V_FLAG := 0;
  SELECT
  TIME_HOUR_START, TIME_MIN_START, TIME_MERIDIAN_START,
  TIME_HOUR_END,TIME_MIN_END,TIME_MERIDIAN_END
  INTO
  V_TIME_HOUR_START,V_TIME_MIN_START, V_TIME_MERIDIAN_START,
  V_TIME_HOUR_END,V_TIME_MIN_END,V_TIME_MERIDIAN_END
  FROM DOCTOR WHERE DOCTOR.DOCTOR_ID = :NEW.DOCTOR_ID;
  
  IF V_TIME_MERIDIAN_START = :NEW.TIME_MERIDIAN AND V_TIME_HOUR_START > :NEW.TIME_HOUR THEN
   V_FLAG := 1;
  ELSIF  V_TIME_MERIDIAN_START = :NEW.TIME_MERIDIAN AND 
  V_TIME_HOUR_START = :NEW.TIME_HOUR AND V_TIME_MIN_START > :NEW.TIME_MIN THEN
   V_FLAG := 1;
   ELSIF  V_TIME_MERIDIAN_START = 'PM' AND :NEW.TIME_MERIDIAN = 'AM' THEN
   V_FLAG := 1;
   ELSIF V_TIME_MERIDIAN_END = :NEW.TIME_MERIDIAN AND 
  V_TIME_HOUR_END < :NEW.TIME_HOUR THEN
   V_FLAG := 1;
   ELSIF  V_TIME_MERIDIAN_END = :NEW.TIME_MERIDIAN AND 
  V_TIME_HOUR_END = :NEW.TIME_HOUR AND V_TIME_MIN_END < :NEW.TIME_MIN THEN
   V_FLAG := 1;
   ELSIF  V_TIME_MERIDIAN_END = 'AM' AND :NEW.TIME_MERIDIAN = 'PM' THEN
   V_FLAG := 1;
   END IF;
  
   IF V_FLAG = 1 THEN
    RAISE_APPLICATION_ERROR(-20010,'SORRY, DOCTOR IS NOT AVAILABLE AT THIS TIME. PLEASE TRY AGAIN.');
  END IF;
  
  SELECT COUNT(APPOINTMENT_ID) INTO V_APPOINTMENT_ID
  FROM APPOINTMENT WHERE
  APPOINTMENT_DATE = :NEW.APPOINTMENT_DATE AND 
  TIME_HOUR = :NEW.TIME_HOUR AND
  TIME_MIN = :NEW.TIME_MIN AND 
  TIME_MERIDIAN = :NEW.TIME_MERIDIAN AND
  APPOINTMENT_STATUS <> 'CANCELED';
  
  IF V_APPOINTMENT_ID > 0 THEN
     V_FLAG := 1;
  END IF;
  
  IF V_FLAG = 1 THEN
    RAISE_APPLICATION_ERROR(-20010,'SORRY, DOCTOR IS NOT AVAILABLE AT THIS TIME. PLEASE TRY AGAIN.');
  END IF;
END;
/
ALTER TRIGGER "HEALTH"."ALREADY_EXISTS_APPOINTMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ASSIGN_ADDRESS_ID
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HEALTH"."ASSIGN_ADDRESS_ID" BEFORE INSERT ON ADDRESS
FOR EACH ROW
BEGIN
 IF :NEW.ADDRESS_ID IS NULL OR :NEW.ADDRESS_ID < 0 THEN
   SELECT ADDRESS_SEQ.NEXTVAL
     INTO :NEW.ADDRESS_ID
     FROM DUAL;
   END IF;
END;
/
ALTER TRIGGER "HEALTH"."ASSIGN_ADDRESS_ID" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ASSIGN_ADMIN_ID
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HEALTH"."ASSIGN_ADMIN_ID" 
BEFORE INSERT ON ADMIN 
FOR EACH ROW 
BEGIN
  IF :NEW.ADMIN_ID IS NULL OR :NEW.ADMIN_ID < 0 THEN
   SELECT ADMIN_SEQ.NEXTVAL
     INTO :NEW.ADMIN_ID
     FROM DUAL;
   END IF;
END;
/
ALTER TRIGGER "HEALTH"."ASSIGN_ADMIN_ID" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ASSIGN_APPOINTMENT_ID
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HEALTH"."ASSIGN_APPOINTMENT_ID" 
BEFORE INSERT ON APPOINTMENT 
FOR EACH ROW 
BEGIN
  IF :NEW.APPOINTMENT_ID IS NULL OR :NEW.APPOINTMENT_ID < 0 THEN
   SELECT APPOINTMENT_SEQ.NEXTVAL
     INTO :NEW.APPOINTMENT_ID
     FROM DUAL;
   END IF;
END;
/
ALTER TRIGGER "HEALTH"."ASSIGN_APPOINTMENT_ID" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ASSIGN_DOCTOR_ID
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HEALTH"."ASSIGN_DOCTOR_ID" 
BEFORE INSERT ON DOCTOR 
FOR EACH ROW 
BEGIN
  IF :NEW.DOCTOR_ID IS NULL OR :NEW.DOCTOR_ID < 0 THEN
   SELECT DOCTOR_SEQ.NEXTVAL
     INTO :NEW.DOCTOR_ID
     FROM DUAL;
   END IF;
END;
/
ALTER TRIGGER "HEALTH"."ASSIGN_DOCTOR_ID" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ASSIGN_DOCTOR_RATING_ID
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HEALTH"."ASSIGN_DOCTOR_RATING_ID" 
BEFORE INSERT ON DOCTOR_RATING 
FOR EACH ROW 
BEGIN
   IF :NEW.DOCTOR_RATING_ID IS NULL OR :NEW.DOCTOR_RATING_ID < 0 THEN
   SELECT DOCTOR_RATING_SEQ.NEXTVAL
     INTO :NEW.DOCTOR_RATING_ID
     FROM DUAL;
   END IF;
END;
/
ALTER TRIGGER "HEALTH"."ASSIGN_DOCTOR_RATING_ID" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ASSIGN_DOCTOR_RATING_SCORE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HEALTH"."ASSIGN_DOCTOR_RATING_SCORE" 
AFTER INSERT ON DOCTOR_RATING 
FOR EACH ROW 
DECLARE
V_AVG_RATING NUMBER;
V_NEW_AVG_RATING NUMBER;
V_RATING_COUNT NUMBER;
BEGIN
  IF :NEW.RATING_SCORE IS NOT NULL AND :NEW.RATING_SCORE <> 0 THEN
  
  SELECT AVERAGE_RATING, RATING_COUNT INTO V_AVG_RATING, V_RATING_COUNT FROM DOCTOR 
  WHERE DOCTOR_ID = (SELECT DOCTOR_ID FROM APPOINTMENT WHERE APPOINTMENT_ID = :NEW.APPOINTMENT_ID);
  
  V_NEW_AVG_RATING := ((V_AVG_RATING * V_RATING_COUNT) + :NEW.RATING_SCORE )/(V_RATING_COUNT +1);
  V_RATING_COUNT := V_RATING_COUNT + 1;
  
  UPDATE DOCTOR
  SET DOCTOR.AVERAGE_RATING = V_NEW_AVG_RATING, RATING_COUNT =  V_RATING_COUNT
  WHERE DOCTOR_ID = (SELECT DOCTOR_ID FROM APPOINTMENT WHERE APPOINTMENT_ID = :NEW.APPOINTMENT_ID);

  
  END IF;
END;
/
ALTER TRIGGER "HEALTH"."ASSIGN_DOCTOR_RATING_SCORE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ASSIGN_MEDICAL_CONSUMPTION_ID
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HEALTH"."ASSIGN_MEDICAL_CONSUMPTION_ID" 
BEFORE INSERT ON MEDICAL_CONSUMPTION 
FOR EACH ROW 
BEGIN
   IF :NEW.MEDICAL_CONSUMPTION_ID IS NULL OR :NEW.MEDICAL_CONSUMPTION_ID < 0 THEN
   SELECT MEDICAL_CONSUMPTION_SEQ.NEXTVAL
     INTO :NEW.MEDICAL_CONSUMPTION_ID
     FROM DUAL;
   END IF;
END;
/
ALTER TRIGGER "HEALTH"."ASSIGN_MEDICAL_CONSUMPTION_ID" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ASSIGN_PATIENT_ID
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HEALTH"."ASSIGN_PATIENT_ID" 
BEFORE INSERT ON PATIENT 
FOR EACH ROW
BEGIN
  IF :NEW.PATIENT_ID IS NULL OR :NEW.PATIENT_ID < 0 THEN
   SELECT PATIENT_SEQ.NEXTVAL
     INTO :NEW.PATIENT_ID
     FROM DUAL;
   END IF;
END;
/
ALTER TRIGGER "HEALTH"."ASSIGN_PATIENT_ID" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ASSIGN_PATIENT_RATING_ID
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HEALTH"."ASSIGN_PATIENT_RATING_ID" 
BEFORE INSERT ON PATIENT_RATING 
FOR EACH ROW 
BEGIN
  IF :NEW.PATIENT_RATING_ID  IS NULL OR :NEW.PATIENT_RATING_ID  < 0 THEN
   SELECT PATIENT_RATING_SEQ.NEXTVAL
     INTO :NEW.PATIENT_RATING_ID 
     FROM DUAL;
   END IF;
END;
/
ALTER TRIGGER "HEALTH"."ASSIGN_PATIENT_RATING_ID" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ASSIGN_PATIENT_RATING_SCORE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HEALTH"."ASSIGN_PATIENT_RATING_SCORE" 
AFTER INSERT ON PATIENT_RATING 
FOR EACH ROW 
DECLARE
V_AVG_RATING NUMBER;
V_NEW_AVG_RATING NUMBER;
V_RATING_COUNT NUMBER;
BEGIN
  IF :NEW.RATING_SCORE IS NOT NULL AND :NEW.RATING_SCORE <> 0 THEN
  
  SELECT AVERAGE_RATING, RATING_COUNT INTO V_AVG_RATING, V_RATING_COUNT FROM PATIENT 
  WHERE PATIENT_ID = (SELECT PATIENT_ID FROM APPOINTMENT WHERE APPOINTMENT_ID = :NEW.APPOINTMENT_ID);
  
  V_NEW_AVG_RATING := ((V_AVG_RATING * V_RATING_COUNT) + :NEW.RATING_SCORE )/(V_RATING_COUNT +1);
  V_RATING_COUNT := V_RATING_COUNT + 1;
  
  UPDATE PATIENT
  SET PATIENT.AVERAGE_RATING = V_NEW_AVG_RATING, RATING_COUNT =  V_RATING_COUNT
  WHERE PATIENT_ID = (SELECT PATIENT_ID FROM APPOINTMENT WHERE APPOINTMENT_ID = :NEW.APPOINTMENT_ID);
  
  END IF;
END;
/
ALTER TRIGGER "HEALTH"."ASSIGN_PATIENT_RATING_SCORE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CHANGE_BALANCE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HEALTH"."CHANGE_BALANCE" 
AFTER INSERT ON APPOINTMENT 
FOR EACH ROW 
DECLARE
V_PATIENT_BALANCE NUMBER;
V_DOCTOR_BALANCE NUMBER;
V_FEE NUMBER;
BEGIN
   SELECT BALANCE INTO V_PATIENT_BALANCE FROM PATIENT WHERE PATIENT_ID = :NEW.PATIENT_ID;
   SELECT BALANCE, CONSULTATION_FEE INTO V_DOCTOR_BALANCE,V_FEE FROM DOCTOR WHERE DOCTOR_ID = :NEW.DOCTOR_ID;
   V_PATIENT_BALANCE := V_PATIENT_BALANCE - V_FEE;
   V_DOCTOR_BALANCE := V_DOCTOR_BALANCE + V_FEE;
   UPDATE PATIENT SET BALANCE = V_PATIENT_BALANCE WHERE PATIENT_ID = :NEW.PATIENT_ID;
   UPDATE DOCTOR SET BALANCE = V_DOCTOR_BALANCE WHERE DOCTOR_ID = :NEW.DOCTOR_ID;
END;
/
ALTER TRIGGER "HEALTH"."CHANGE_BALANCE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPDATE_CANCEL_BALANCE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HEALTH"."UPDATE_CANCEL_BALANCE" 
AFTER UPDATE  OF APPOINTMENT_STATUS ON APPOINTMENT 
FOR EACH ROW 
DECLARE
V_PATIENT_BALANCE NUMBER;
V_DOCTOR_BALANCE NUMBER;
V_FEE NUMBER;
BEGIN
  IF :NEW.APPOINTMENT_STATUS = 'CANCELED' THEN
   SELECT BALANCE INTO V_PATIENT_BALANCE FROM PATIENT WHERE PATIENT_ID = :NEW.PATIENT_ID;
   SELECT BALANCE, CONSULTATION_FEE INTO V_DOCTOR_BALANCE,V_FEE FROM DOCTOR WHERE DOCTOR_ID = :NEW.DOCTOR_ID;
   V_PATIENT_BALANCE := V_PATIENT_BALANCE + V_FEE;
   V_DOCTOR_BALANCE := V_DOCTOR_BALANCE - V_FEE;
   UPDATE PATIENT SET BALANCE = V_PATIENT_BALANCE WHERE PATIENT_ID = :NEW.PATIENT_ID;
   UPDATE DOCTOR SET BALANCE = V_DOCTOR_BALANCE WHERE DOCTOR_ID = :NEW.DOCTOR_ID;
  END IF;
END;
/
ALTER TRIGGER "HEALTH"."UPDATE_CANCEL_BALANCE" ENABLE;
